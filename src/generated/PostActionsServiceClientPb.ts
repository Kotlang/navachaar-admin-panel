/**
 * @fileoverview gRPC-Web generated client stub for social
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.6.1
// source: postActions.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as postActions_pb from './postActions_pb';
import * as commons_pb from './commons_pb';


export class PostActionsClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorLikePost = new grpcWeb.MethodDescriptor(
    '/social.PostActions/LikePost',
    grpcWeb.MethodType.UNARY,
    postActions_pb.PostIdRequest,
    commons_pb.SocialStatusResponse,
    (request: postActions_pb.PostIdRequest) => {
      return request.serializeBinary();
    },
    commons_pb.SocialStatusResponse.deserializeBinary
  );

  likePost(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<commons_pb.SocialStatusResponse>;

  likePost(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: commons_pb.SocialStatusResponse) => void): grpcWeb.ClientReadableStream<commons_pb.SocialStatusResponse>;

  likePost(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: commons_pb.SocialStatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/social.PostActions/LikePost',
        request,
        metadata || {},
        this.methodDescriptorLikePost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/social.PostActions/LikePost',
    request,
    metadata || {},
    this.methodDescriptorLikePost);
  }

  methodDescriptorUnLikePost = new grpcWeb.MethodDescriptor(
    '/social.PostActions/UnLikePost',
    grpcWeb.MethodType.UNARY,
    postActions_pb.PostIdRequest,
    commons_pb.SocialStatusResponse,
    (request: postActions_pb.PostIdRequest) => {
      return request.serializeBinary();
    },
    commons_pb.SocialStatusResponse.deserializeBinary
  );

  unLikePost(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<commons_pb.SocialStatusResponse>;

  unLikePost(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: commons_pb.SocialStatusResponse) => void): grpcWeb.ClientReadableStream<commons_pb.SocialStatusResponse>;

  unLikePost(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: commons_pb.SocialStatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/social.PostActions/UnLikePost',
        request,
        metadata || {},
        this.methodDescriptorUnLikePost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/social.PostActions/UnLikePost',
    request,
    metadata || {},
    this.methodDescriptorUnLikePost);
  }

  methodDescriptorBookmark = new grpcWeb.MethodDescriptor(
    '/social.PostActions/Bookmark',
    grpcWeb.MethodType.UNARY,
    postActions_pb.PostIdRequest,
    commons_pb.SocialStatusResponse,
    (request: postActions_pb.PostIdRequest) => {
      return request.serializeBinary();
    },
    commons_pb.SocialStatusResponse.deserializeBinary
  );

  bookmark(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<commons_pb.SocialStatusResponse>;

  bookmark(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: commons_pb.SocialStatusResponse) => void): grpcWeb.ClientReadableStream<commons_pb.SocialStatusResponse>;

  bookmark(
    request: postActions_pb.PostIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: commons_pb.SocialStatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/social.PostActions/Bookmark',
        request,
        metadata || {},
        this.methodDescriptorBookmark,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/social.PostActions/Bookmark',
    request,
    metadata || {},
    this.methodDescriptorBookmark);
  }

}

