/**
 * @fileoverview gRPC-Web generated client stub for login
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.1
// source: profile.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as profile_pb from './profile_pb';
import * as common_pb from './common_pb';


export class ProfileClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorcreateOrUpdateProfile = new grpcWeb.MethodDescriptor(
    '/login.Profile/createOrUpdateProfile',
    grpcWeb.MethodType.UNARY,
    profile_pb.CreateProfileRequest,
    common_pb.UserProfileProto,
    (request: profile_pb.CreateProfileRequest) => {
      return request.serializeBinary();
    },
    common_pb.UserProfileProto.deserializeBinary
  );

  createOrUpdateProfile(
    request: profile_pb.CreateProfileRequest,
    metadata: grpcWeb.Metadata | null): Promise<common_pb.UserProfileProto>;

  createOrUpdateProfile(
    request: profile_pb.CreateProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: common_pb.UserProfileProto) => void): grpcWeb.ClientReadableStream<common_pb.UserProfileProto>;

  createOrUpdateProfile(
    request: profile_pb.CreateProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: common_pb.UserProfileProto) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.Profile/createOrUpdateProfile',
        request,
        metadata || {},
        this.methodDescriptorcreateOrUpdateProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.Profile/createOrUpdateProfile',
    request,
    metadata || {},
    this.methodDescriptorcreateOrUpdateProfile);
  }

  methodDescriptorgetProfileById = new grpcWeb.MethodDescriptor(
    '/login.Profile/getProfileById',
    grpcWeb.MethodType.UNARY,
    profile_pb.GetProfileRequest,
    common_pb.UserProfileProto,
    (request: profile_pb.GetProfileRequest) => {
      return request.serializeBinary();
    },
    common_pb.UserProfileProto.deserializeBinary
  );

  getProfileById(
    request: profile_pb.GetProfileRequest,
    metadata: grpcWeb.Metadata | null): Promise<common_pb.UserProfileProto>;

  getProfileById(
    request: profile_pb.GetProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: common_pb.UserProfileProto) => void): grpcWeb.ClientReadableStream<common_pb.UserProfileProto>;

  getProfileById(
    request: profile_pb.GetProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: common_pb.UserProfileProto) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.Profile/getProfileById',
        request,
        metadata || {},
        this.methodDescriptorgetProfileById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.Profile/getProfileById',
    request,
    metadata || {},
    this.methodDescriptorgetProfileById);
  }

  methodDescriptorbulkGetProfileByIds = new grpcWeb.MethodDescriptor(
    '/login.Profile/bulkGetProfileByIds',
    grpcWeb.MethodType.UNARY,
    profile_pb.BulkGetProfileRequest,
    profile_pb.BulkGetProfileResponse,
    (request: profile_pb.BulkGetProfileRequest) => {
      return request.serializeBinary();
    },
    profile_pb.BulkGetProfileResponse.deserializeBinary
  );

  bulkGetProfileByIds(
    request: profile_pb.BulkGetProfileRequest,
    metadata: grpcWeb.Metadata | null): Promise<profile_pb.BulkGetProfileResponse>;

  bulkGetProfileByIds(
    request: profile_pb.BulkGetProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile_pb.BulkGetProfileResponse) => void): grpcWeb.ClientReadableStream<profile_pb.BulkGetProfileResponse>;

  bulkGetProfileByIds(
    request: profile_pb.BulkGetProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile_pb.BulkGetProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.Profile/bulkGetProfileByIds',
        request,
        metadata || {},
        this.methodDescriptorbulkGetProfileByIds,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.Profile/bulkGetProfileByIds',
    request,
    metadata || {},
    this.methodDescriptorbulkGetProfileByIds);
  }

  methodDescriptorgetProfileImageUploadUrl = new grpcWeb.MethodDescriptor(
    '/login.Profile/getProfileImageUploadUrl',
    grpcWeb.MethodType.UNARY,
    profile_pb.ProfileImageUploadRequest,
    profile_pb.ProfileImageUploadURL,
    (request: profile_pb.ProfileImageUploadRequest) => {
      return request.serializeBinary();
    },
    profile_pb.ProfileImageUploadURL.deserializeBinary
  );

  getProfileImageUploadUrl(
    request: profile_pb.ProfileImageUploadRequest,
    metadata: grpcWeb.Metadata | null): Promise<profile_pb.ProfileImageUploadURL>;

  getProfileImageUploadUrl(
    request: profile_pb.ProfileImageUploadRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile_pb.ProfileImageUploadURL) => void): grpcWeb.ClientReadableStream<profile_pb.ProfileImageUploadURL>;

  getProfileImageUploadUrl(
    request: profile_pb.ProfileImageUploadRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile_pb.ProfileImageUploadURL) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.Profile/getProfileImageUploadUrl',
        request,
        metadata || {},
        this.methodDescriptorgetProfileImageUploadUrl,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.Profile/getProfileImageUploadUrl',
    request,
    metadata || {},
    this.methodDescriptorgetProfileImageUploadUrl);
  }

  methodDescriptorgetProfilesByAttribute = new grpcWeb.MethodDescriptor(
    '/login.Profile/getProfilesByAttribute',
    grpcWeb.MethodType.UNARY,
    profile_pb.AttributeRequest,
    profile_pb.AttributeResponse,
    (request: profile_pb.AttributeRequest) => {
      return request.serializeBinary();
    },
    profile_pb.AttributeResponse.deserializeBinary
  );

  getProfilesByAttribute(
    request: profile_pb.AttributeRequest,
    metadata: grpcWeb.Metadata | null): Promise<profile_pb.AttributeResponse>;

  getProfilesByAttribute(
    request: profile_pb.AttributeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile_pb.AttributeResponse) => void): grpcWeb.ClientReadableStream<profile_pb.AttributeResponse>;

  getProfilesByAttribute(
    request: profile_pb.AttributeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile_pb.AttributeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.Profile/getProfilesByAttribute',
        request,
        metadata || {},
        this.methodDescriptorgetProfilesByAttribute,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.Profile/getProfilesByAttribute',
    request,
    metadata || {},
    this.methodDescriptorgetProfilesByAttribute);
  }

}

