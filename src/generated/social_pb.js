// source: social.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var commons_pb = require('./commons_pb.js');
goog.object.extend(proto, commons_pb);
goog.exportSymbol('proto.social.DeletePostRequest', null, global);
goog.exportSymbol('proto.social.FeedFilters', null, global);
goog.exportSymbol('proto.social.FeedResponse', null, global);
goog.exportSymbol('proto.social.GetBookmarksRequest', null, global);
goog.exportSymbol('proto.social.GetFeedRequest', null, global);
goog.exportSymbol('proto.social.GetFeedRequest.PostType', null, global);
goog.exportSymbol('proto.social.GetPostRequest', null, global);
goog.exportSymbol('proto.social.GetTagsRequest', null, global);
goog.exportSymbol('proto.social.MediaUploadRequest', null, global);
goog.exportSymbol('proto.social.MediaUploadURL', null, global);
goog.exportSymbol('proto.social.MediaUrl', null, global);
goog.exportSymbol('proto.social.TagListResponse', null, global);
goog.exportSymbol('proto.social.UploadPostMediaRequest', null, global);
goog.exportSymbol('proto.social.UploadPostMediaResponse', null, global);
goog.exportSymbol('proto.social.UserPostProto', null, global);
goog.exportSymbol('proto.social.UserPostRequest', null, global);
goog.exportSymbol('proto.social.UserPostRequest.PostType', null, global);
goog.exportSymbol('proto.social.WebPreview', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.MediaUrl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.MediaUrl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.MediaUrl.displayName = 'proto.social.MediaUrl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.WebPreview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.WebPreview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.WebPreview.displayName = 'proto.social.WebPreview';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.UserPostRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.social.UserPostRequest.repeatedFields_, null);
};
goog.inherits(proto.social.UserPostRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.UserPostRequest.displayName = 'proto.social.UserPostRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.UserPostProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.social.UserPostProto.repeatedFields_, null);
};
goog.inherits(proto.social.UserPostProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.UserPostProto.displayName = 'proto.social.UserPostProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.DeletePostRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.DeletePostRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.DeletePostRequest.displayName = 'proto.social.DeletePostRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.FeedFilters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.FeedFilters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.FeedFilters.displayName = 'proto.social.FeedFilters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.GetFeedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.GetFeedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.GetFeedRequest.displayName = 'proto.social.GetFeedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.FeedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.social.FeedResponse.repeatedFields_, null);
};
goog.inherits(proto.social.FeedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.FeedResponse.displayName = 'proto.social.FeedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.MediaUploadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.MediaUploadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.MediaUploadRequest.displayName = 'proto.social.MediaUploadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.GetPostRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.GetPostRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.GetPostRequest.displayName = 'proto.social.GetPostRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.GetBookmarksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.GetBookmarksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.GetBookmarksRequest.displayName = 'proto.social.GetBookmarksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.GetTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.GetTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.GetTagsRequest.displayName = 'proto.social.GetTagsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.TagListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.social.TagListResponse.repeatedFields_, null);
};
goog.inherits(proto.social.TagListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.TagListResponse.displayName = 'proto.social.TagListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.MediaUploadURL = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.MediaUploadURL, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.MediaUploadURL.displayName = 'proto.social.MediaUploadURL';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.UploadPostMediaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.UploadPostMediaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.UploadPostMediaRequest.displayName = 'proto.social.UploadPostMediaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.UploadPostMediaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.UploadPostMediaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.UploadPostMediaResponse.displayName = 'proto.social.UploadPostMediaResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.MediaUrl.prototype.toObject = function(opt_includeInstance) {
  return proto.social.MediaUrl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.MediaUrl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.MediaUrl.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mimetype: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.MediaUrl}
 */
proto.social.MediaUrl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.MediaUrl;
  return proto.social.MediaUrl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.MediaUrl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.MediaUrl}
 */
proto.social.MediaUrl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.MediaUrl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.MediaUrl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.MediaUrl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.MediaUrl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMimetype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.social.MediaUrl.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.MediaUrl} returns this
 */
proto.social.MediaUrl.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mimeType = 2;
 * @return {string}
 */
proto.social.MediaUrl.prototype.getMimetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.MediaUrl} returns this
 */
proto.social.MediaUrl.prototype.setMimetype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.WebPreview.prototype.toObject = function(opt_includeInstance) {
  return proto.social.WebPreview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.WebPreview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.WebPreview.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    previewimage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.WebPreview}
 */
proto.social.WebPreview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.WebPreview;
  return proto.social.WebPreview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.WebPreview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.WebPreview}
 */
proto.social.WebPreview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewimage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.WebPreview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.WebPreview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.WebPreview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.WebPreview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPreviewimage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.social.WebPreview.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.WebPreview} returns this
 */
proto.social.WebPreview.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string previewImage = 2;
 * @return {string}
 */
proto.social.WebPreview.prototype.getPreviewimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.WebPreview} returns this
 */
proto.social.WebPreview.prototype.setPreviewimage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.social.WebPreview.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.WebPreview} returns this
 */
proto.social.WebPreview.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.social.WebPreview.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.WebPreview} returns this
 */
proto.social.WebPreview.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.social.UserPostRequest.repeatedFields_ = [2,5,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.UserPostRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.UserPostRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.UserPostRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UserPostRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    post: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    referencepost: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mediaurlsList: jspb.Message.toObjectList(msg.getMediaurlsList(),
    proto.social.MediaUrl.toObject, includeInstance),
    webpreviewsList: jspb.Message.toObjectList(msg.getWebpreviewsList(),
    proto.social.WebPreview.toObject, includeInstance),
    posttype: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.UserPostRequest}
 */
proto.social.UserPostRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.UserPostRequest;
  return proto.social.UserPostRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.UserPostRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.UserPostRequest}
 */
proto.social.UserPostRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferencepost(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = new proto.social.MediaUrl;
      reader.readMessage(value,proto.social.MediaUrl.deserializeBinaryFromReader);
      msg.addMediaurls(value);
      break;
    case 7:
      var value = new proto.social.WebPreview;
      reader.readMessage(value,proto.social.WebPreview.deserializeBinaryFromReader);
      msg.addWebpreviews(value);
      break;
    case 6:
      var value = /** @type {!proto.social.UserPostRequest.PostType} */ (reader.readEnum());
      msg.setPosttype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.UserPostRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.UserPostRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.UserPostRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UserPostRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getReferencepost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMediaurlsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.social.MediaUrl.serializeBinaryToWriter
    );
  }
  f = message.getWebpreviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.social.WebPreview.serializeBinaryToWriter
    );
  }
  f = message.getPosttype();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.social.UserPostRequest.PostType = {
  FEED_POST: 0,
  QNA_QUESTION: 1,
  QNA_ANSWER: 2
};

/**
 * optional string post = 1;
 * @return {string}
 */
proto.social.UserPostRequest.prototype.getPost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.setPost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.social.UserPostRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string referencePost = 3;
 * @return {string}
 */
proto.social.UserPostRequest.prototype.getReferencepost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.setReferencepost = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.social.UserPostRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated MediaUrl mediaUrls = 5;
 * @return {!Array<!proto.social.MediaUrl>}
 */
proto.social.UserPostRequest.prototype.getMediaurlsList = function() {
  return /** @type{!Array<!proto.social.MediaUrl>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.social.MediaUrl, 5));
};


/**
 * @param {!Array<!proto.social.MediaUrl>} value
 * @return {!proto.social.UserPostRequest} returns this
*/
proto.social.UserPostRequest.prototype.setMediaurlsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.social.MediaUrl=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.MediaUrl}
 */
proto.social.UserPostRequest.prototype.addMediaurls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.social.MediaUrl, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.clearMediaurlsList = function() {
  return this.setMediaurlsList([]);
};


/**
 * repeated WebPreview webPreviews = 7;
 * @return {!Array<!proto.social.WebPreview>}
 */
proto.social.UserPostRequest.prototype.getWebpreviewsList = function() {
  return /** @type{!Array<!proto.social.WebPreview>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.social.WebPreview, 7));
};


/**
 * @param {!Array<!proto.social.WebPreview>} value
 * @return {!proto.social.UserPostRequest} returns this
*/
proto.social.UserPostRequest.prototype.setWebpreviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.social.WebPreview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.WebPreview}
 */
proto.social.UserPostRequest.prototype.addWebpreviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.social.WebPreview, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.clearWebpreviewsList = function() {
  return this.setWebpreviewsList([]);
};


/**
 * optional PostType postType = 6;
 * @return {!proto.social.UserPostRequest.PostType}
 */
proto.social.UserPostRequest.prototype.getPosttype = function() {
  return /** @type {!proto.social.UserPostRequest.PostType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.social.UserPostRequest.PostType} value
 * @return {!proto.social.UserPostRequest} returns this
 */
proto.social.UserPostRequest.prototype.setPosttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.social.UserPostProto.repeatedFields_ = [2,4,16,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.UserPostProto.prototype.toObject = function(opt_includeInstance) {
  return proto.social.UserPostProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.UserPostProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UserPostProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    post: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    postid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mediaurlsList: jspb.Message.toObjectList(msg.getMediaurlsList(),
    proto.social.MediaUrl.toObject, includeInstance),
    webpreviewsList: jspb.Message.toObjectList(msg.getWebpreviewsList(),
    proto.social.WebPreview.toObject, includeInstance),
    createdon: jspb.Message.getFieldWithDefault(msg, 5, 0),
    referencepost: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    authorinfo: (f = msg.getAuthorinfo()) && commons_pb.SocialProfile.toObject(includeInstance, f),
    numlikes: jspb.Message.getFieldWithDefault(msg, 8, 0),
    numreplies: jspb.Message.getFieldWithDefault(msg, 9, 0),
    numshares: jspb.Message.getFieldWithDefault(msg, 10, 0),
    title: jspb.Message.getFieldWithDefault(msg, 11, ""),
    hasfeeduserliked: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    answersthreadList: jspb.Message.toObjectList(msg.getAnswersthreadList(),
    proto.social.UserPostProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.UserPostProto}
 */
proto.social.UserPostProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.UserPostProto;
  return proto.social.UserPostProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.UserPostProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.UserPostProto}
 */
proto.social.UserPostProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostid(value);
      break;
    case 4:
      var value = new proto.social.MediaUrl;
      reader.readMessage(value,proto.social.MediaUrl.deserializeBinaryFromReader);
      msg.addMediaurls(value);
      break;
    case 16:
      var value = new proto.social.WebPreview;
      reader.readMessage(value,proto.social.WebPreview.deserializeBinaryFromReader);
      msg.addWebpreviews(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedon(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferencepost(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 13:
      var value = new commons_pb.SocialProfile;
      reader.readMessage(value,commons_pb.SocialProfile.deserializeBinaryFromReader);
      msg.setAuthorinfo(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumlikes(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumreplies(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumshares(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasfeeduserliked(value);
      break;
    case 15:
      var value = new proto.social.UserPostProto;
      reader.readMessage(value,proto.social.UserPostProto.deserializeBinaryFromReader);
      msg.addAnswersthread(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.UserPostProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.UserPostProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.UserPostProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UserPostProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getPostid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMediaurlsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.social.MediaUrl.serializeBinaryToWriter
    );
  }
  f = message.getWebpreviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.social.WebPreview.serializeBinaryToWriter
    );
  }
  f = message.getCreatedon();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getReferencepost();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAuthorinfo();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      commons_pb.SocialProfile.serializeBinaryToWriter
    );
  }
  f = message.getNumlikes();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getNumreplies();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getNumshares();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getHasfeeduserliked();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getAnswersthreadList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.social.UserPostProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional string post = 1;
 * @return {string}
 */
proto.social.UserPostProto.prototype.getPost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setPost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.social.UserPostProto.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string postId = 3;
 * @return {string}
 */
proto.social.UserPostProto.prototype.getPostid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setPostid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated MediaUrl mediaUrls = 4;
 * @return {!Array<!proto.social.MediaUrl>}
 */
proto.social.UserPostProto.prototype.getMediaurlsList = function() {
  return /** @type{!Array<!proto.social.MediaUrl>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.social.MediaUrl, 4));
};


/**
 * @param {!Array<!proto.social.MediaUrl>} value
 * @return {!proto.social.UserPostProto} returns this
*/
proto.social.UserPostProto.prototype.setMediaurlsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.social.MediaUrl=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.MediaUrl}
 */
proto.social.UserPostProto.prototype.addMediaurls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.social.MediaUrl, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.clearMediaurlsList = function() {
  return this.setMediaurlsList([]);
};


/**
 * repeated WebPreview webPreviews = 16;
 * @return {!Array<!proto.social.WebPreview>}
 */
proto.social.UserPostProto.prototype.getWebpreviewsList = function() {
  return /** @type{!Array<!proto.social.WebPreview>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.social.WebPreview, 16));
};


/**
 * @param {!Array<!proto.social.WebPreview>} value
 * @return {!proto.social.UserPostProto} returns this
*/
proto.social.UserPostProto.prototype.setWebpreviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.social.WebPreview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.WebPreview}
 */
proto.social.UserPostProto.prototype.addWebpreviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.social.WebPreview, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.clearWebpreviewsList = function() {
  return this.setWebpreviewsList([]);
};


/**
 * optional int64 createdOn = 5;
 * @return {number}
 */
proto.social.UserPostProto.prototype.getCreatedon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setCreatedon = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string referencePost = 6;
 * @return {string}
 */
proto.social.UserPostProto.prototype.getReferencepost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setReferencepost = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string userId = 7;
 * @return {string}
 */
proto.social.UserPostProto.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional SocialProfile authorInfo = 13;
 * @return {?proto.social.SocialProfile}
 */
proto.social.UserPostProto.prototype.getAuthorinfo = function() {
  return /** @type{?proto.social.SocialProfile} */ (
    jspb.Message.getWrapperField(this, commons_pb.SocialProfile, 13));
};


/**
 * @param {?proto.social.SocialProfile|undefined} value
 * @return {!proto.social.UserPostProto} returns this
*/
proto.social.UserPostProto.prototype.setAuthorinfo = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.clearAuthorinfo = function() {
  return this.setAuthorinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.social.UserPostProto.prototype.hasAuthorinfo = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int32 numLikes = 8;
 * @return {number}
 */
proto.social.UserPostProto.prototype.getNumlikes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setNumlikes = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 numReplies = 9;
 * @return {number}
 */
proto.social.UserPostProto.prototype.getNumreplies = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setNumreplies = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 numShares = 10;
 * @return {number}
 */
proto.social.UserPostProto.prototype.getNumshares = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setNumshares = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string title = 11;
 * @return {string}
 */
proto.social.UserPostProto.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool hasFeedUserLiked = 12;
 * @return {boolean}
 */
proto.social.UserPostProto.prototype.getHasfeeduserliked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.setHasfeeduserliked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * repeated UserPostProto answersThread = 15;
 * @return {!Array<!proto.social.UserPostProto>}
 */
proto.social.UserPostProto.prototype.getAnswersthreadList = function() {
  return /** @type{!Array<!proto.social.UserPostProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.social.UserPostProto, 15));
};


/**
 * @param {!Array<!proto.social.UserPostProto>} value
 * @return {!proto.social.UserPostProto} returns this
*/
proto.social.UserPostProto.prototype.setAnswersthreadList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.social.UserPostProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.UserPostProto}
 */
proto.social.UserPostProto.prototype.addAnswersthread = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.social.UserPostProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.UserPostProto} returns this
 */
proto.social.UserPostProto.prototype.clearAnswersthreadList = function() {
  return this.setAnswersthreadList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.DeletePostRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.DeletePostRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.DeletePostRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.DeletePostRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.DeletePostRequest}
 */
proto.social.DeletePostRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.DeletePostRequest;
  return proto.social.DeletePostRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.DeletePostRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.DeletePostRequest}
 */
proto.social.DeletePostRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.DeletePostRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.DeletePostRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.DeletePostRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.DeletePostRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.social.DeletePostRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.DeletePostRequest} returns this
 */
proto.social.DeletePostRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.FeedFilters.prototype.toObject = function(opt_includeInstance) {
  return proto.social.FeedFilters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.FeedFilters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.FeedFilters.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.FeedFilters}
 */
proto.social.FeedFilters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.FeedFilters;
  return proto.social.FeedFilters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.FeedFilters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.FeedFilters}
 */
proto.social.FeedFilters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.FeedFilters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.FeedFilters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.FeedFilters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.FeedFilters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.social.FeedFilters.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.FeedFilters} returns this
 */
proto.social.FeedFilters.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.social.FeedFilters.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.FeedFilters} returns this
 */
proto.social.FeedFilters.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.GetFeedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.GetFeedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.GetFeedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetFeedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    posttype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filters: (f = msg.getFilters()) && proto.social.FeedFilters.toObject(includeInstance, f),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.GetFeedRequest}
 */
proto.social.GetFeedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.GetFeedRequest;
  return proto.social.GetFeedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.GetFeedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.GetFeedRequest}
 */
proto.social.GetFeedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.social.GetFeedRequest.PostType} */ (reader.readEnum());
      msg.setPosttype(value);
      break;
    case 2:
      var value = new proto.social.FeedFilters;
      reader.readMessage(value,proto.social.FeedFilters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.GetFeedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.GetFeedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.GetFeedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetFeedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosttype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.social.FeedFilters.serializeBinaryToWriter
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.social.GetFeedRequest.PostType = {
  FEED_POST: 0,
  QNA_QUESTION: 1
};

/**
 * optional PostType postType = 1;
 * @return {!proto.social.GetFeedRequest.PostType}
 */
proto.social.GetFeedRequest.prototype.getPosttype = function() {
  return /** @type {!proto.social.GetFeedRequest.PostType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.social.GetFeedRequest.PostType} value
 * @return {!proto.social.GetFeedRequest} returns this
 */
proto.social.GetFeedRequest.prototype.setPosttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional FeedFilters filters = 2;
 * @return {?proto.social.FeedFilters}
 */
proto.social.GetFeedRequest.prototype.getFilters = function() {
  return /** @type{?proto.social.FeedFilters} */ (
    jspb.Message.getWrapperField(this, proto.social.FeedFilters, 2));
};


/**
 * @param {?proto.social.FeedFilters|undefined} value
 * @return {!proto.social.GetFeedRequest} returns this
*/
proto.social.GetFeedRequest.prototype.setFilters = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.social.GetFeedRequest} returns this
 */
proto.social.GetFeedRequest.prototype.clearFilters = function() {
  return this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.social.GetFeedRequest.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 pageSize = 3;
 * @return {number}
 */
proto.social.GetFeedRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.GetFeedRequest} returns this
 */
proto.social.GetFeedRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 pageNumber = 4;
 * @return {number}
 */
proto.social.GetFeedRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.GetFeedRequest} returns this
 */
proto.social.GetFeedRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.social.FeedResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.FeedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.social.FeedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.FeedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.FeedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    postsList: jspb.Message.toObjectList(msg.getPostsList(),
    proto.social.UserPostProto.toObject, includeInstance),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalpages: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.FeedResponse}
 */
proto.social.FeedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.FeedResponse;
  return proto.social.FeedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.FeedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.FeedResponse}
 */
proto.social.FeedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.social.UserPostProto;
      reader.readMessage(value,proto.social.UserPostProto.deserializeBinaryFromReader);
      msg.addPosts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.FeedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.FeedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.FeedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.FeedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.social.UserPostProto.serializeBinaryToWriter
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTotalpages();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * repeated UserPostProto posts = 1;
 * @return {!Array<!proto.social.UserPostProto>}
 */
proto.social.FeedResponse.prototype.getPostsList = function() {
  return /** @type{!Array<!proto.social.UserPostProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.social.UserPostProto, 1));
};


/**
 * @param {!Array<!proto.social.UserPostProto>} value
 * @return {!proto.social.FeedResponse} returns this
*/
proto.social.FeedResponse.prototype.setPostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.social.UserPostProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.UserPostProto}
 */
proto.social.FeedResponse.prototype.addPosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.social.UserPostProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.FeedResponse} returns this
 */
proto.social.FeedResponse.prototype.clearPostsList = function() {
  return this.setPostsList([]);
};


/**
 * optional int32 pageNumber = 2;
 * @return {number}
 */
proto.social.FeedResponse.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.FeedResponse} returns this
 */
proto.social.FeedResponse.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 pageSize = 3;
 * @return {number}
 */
proto.social.FeedResponse.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.FeedResponse} returns this
 */
proto.social.FeedResponse.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 totalPages = 4;
 * @return {number}
 */
proto.social.FeedResponse.prototype.getTotalpages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.FeedResponse} returns this
 */
proto.social.FeedResponse.prototype.setTotalpages = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.MediaUploadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.MediaUploadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.MediaUploadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.MediaUploadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaextension: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.MediaUploadRequest}
 */
proto.social.MediaUploadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.MediaUploadRequest;
  return proto.social.MediaUploadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.MediaUploadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.MediaUploadRequest}
 */
proto.social.MediaUploadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaextension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.MediaUploadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.MediaUploadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.MediaUploadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.MediaUploadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaextension();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string mediaExtension = 1;
 * @return {string}
 */
proto.social.MediaUploadRequest.prototype.getMediaextension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.MediaUploadRequest} returns this
 */
proto.social.MediaUploadRequest.prototype.setMediaextension = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.GetPostRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.GetPostRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.GetPostRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetPostRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    postid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.GetPostRequest}
 */
proto.social.GetPostRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.GetPostRequest;
  return proto.social.GetPostRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.GetPostRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.GetPostRequest}
 */
proto.social.GetPostRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.GetPostRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.GetPostRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.GetPostRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetPostRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPostid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string postId = 1;
 * @return {string}
 */
proto.social.GetPostRequest.prototype.getPostid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.GetPostRequest} returns this
 */
proto.social.GetPostRequest.prototype.setPostid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.GetBookmarksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.GetBookmarksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.GetBookmarksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetBookmarksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.GetBookmarksRequest}
 */
proto.social.GetBookmarksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.GetBookmarksRequest;
  return proto.social.GetBookmarksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.GetBookmarksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.GetBookmarksRequest}
 */
proto.social.GetBookmarksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.GetBookmarksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.GetBookmarksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.GetBookmarksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetBookmarksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 pageSize = 3;
 * @return {number}
 */
proto.social.GetBookmarksRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.GetBookmarksRequest} returns this
 */
proto.social.GetBookmarksRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 pageNumber = 4;
 * @return {number}
 */
proto.social.GetBookmarksRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.GetBookmarksRequest} returns this
 */
proto.social.GetBookmarksRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.GetTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.GetTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.GetTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    language: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.GetTagsRequest}
 */
proto.social.GetTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.GetTagsRequest;
  return proto.social.GetTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.GetTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.GetTagsRequest}
 */
proto.social.GetTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.GetTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.GetTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.GetTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.GetTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.social.GetTagsRequest.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.GetTagsRequest} returns this
 */
proto.social.GetTagsRequest.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.social.TagListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.TagListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.social.TagListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.TagListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.TagListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.TagListResponse}
 */
proto.social.TagListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.TagListResponse;
  return proto.social.TagListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.TagListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.TagListResponse}
 */
proto.social.TagListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.TagListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.TagListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.TagListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.TagListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string tag = 1;
 * @return {!Array<string>}
 */
proto.social.TagListResponse.prototype.getTagList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.social.TagListResponse} returns this
 */
proto.social.TagListResponse.prototype.setTagList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.social.TagListResponse} returns this
 */
proto.social.TagListResponse.prototype.addTag = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.TagListResponse} returns this
 */
proto.social.TagListResponse.prototype.clearTagList = function() {
  return this.setTagList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.MediaUploadURL.prototype.toObject = function(opt_includeInstance) {
  return proto.social.MediaUploadURL.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.MediaUploadURL} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.MediaUploadURL.toObject = function(includeInstance, msg) {
  var f, obj = {
    uploadurl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mediaurl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.MediaUploadURL}
 */
proto.social.MediaUploadURL.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.MediaUploadURL;
  return proto.social.MediaUploadURL.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.MediaUploadURL} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.MediaUploadURL}
 */
proto.social.MediaUploadURL.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadurl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.MediaUploadURL.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.MediaUploadURL.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.MediaUploadURL} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.MediaUploadURL.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUploadurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMediaurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string uploadUrl = 1;
 * @return {string}
 */
proto.social.MediaUploadURL.prototype.getUploadurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.MediaUploadURL} returns this
 */
proto.social.MediaUploadURL.prototype.setUploadurl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mediaUrl = 2;
 * @return {string}
 */
proto.social.MediaUploadURL.prototype.getMediaurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.MediaUploadURL} returns this
 */
proto.social.MediaUploadURL.prototype.setMediaurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.UploadPostMediaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.UploadPostMediaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.UploadPostMediaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UploadPostMediaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chunkdata: msg.getChunkdata_asB64(),
    mediaextension: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.UploadPostMediaRequest}
 */
proto.social.UploadPostMediaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.UploadPostMediaRequest;
  return proto.social.UploadPostMediaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.UploadPostMediaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.UploadPostMediaRequest}
 */
proto.social.UploadPostMediaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChunkdata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaextension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.UploadPostMediaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.UploadPostMediaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.UploadPostMediaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UploadPostMediaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChunkdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMediaextension();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes chunkData = 1;
 * @return {!(string|Uint8Array)}
 */
proto.social.UploadPostMediaRequest.prototype.getChunkdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes chunkData = 1;
 * This is a type-conversion wrapper around `getChunkdata()`
 * @return {string}
 */
proto.social.UploadPostMediaRequest.prototype.getChunkdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChunkdata()));
};


/**
 * optional bytes chunkData = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChunkdata()`
 * @return {!Uint8Array}
 */
proto.social.UploadPostMediaRequest.prototype.getChunkdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChunkdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.social.UploadPostMediaRequest} returns this
 */
proto.social.UploadPostMediaRequest.prototype.setChunkdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string mediaExtension = 2;
 * @return {string}
 */
proto.social.UploadPostMediaRequest.prototype.getMediaextension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UploadPostMediaRequest} returns this
 */
proto.social.UploadPostMediaRequest.prototype.setMediaextension = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.UploadPostMediaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.social.UploadPostMediaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.UploadPostMediaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UploadPostMediaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    uploadpath: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.UploadPostMediaResponse}
 */
proto.social.UploadPostMediaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.UploadPostMediaResponse;
  return proto.social.UploadPostMediaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.UploadPostMediaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.UploadPostMediaResponse}
 */
proto.social.UploadPostMediaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadpath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.UploadPostMediaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.UploadPostMediaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.UploadPostMediaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.UploadPostMediaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUploadpath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uploadPath = 1;
 * @return {string}
 */
proto.social.UploadPostMediaResponse.prototype.getUploadpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.UploadPostMediaResponse} returns this
 */
proto.social.UploadPostMediaResponse.prototype.setUploadpath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.social);
